-- Sa√≠da esperada
---- The marvelous env Debugger ------ 
--x  :  [[1, null, null, null, null], [null, 3, null, null, null], [null, null, 5, null, null], [null, null, null, 7, null], [null, null, null, null, 9]]
--i  :  5
--z  :  7
--k  :  5

data Ponto{
	x :: Int;
	y :: Int;
}

fat(n :: Int, nC :: Char) : Int{
  k = 1 + 'c';
  print n + nC;
  if(n == 0){
      return 1;
  }
  return n*fat(n-1)[0];
}

fat(n :: Int, n2 :: Float) : Int{
  if(n == 0){
      return 1;
  }
  return n*fat(n-1)[0];
}

--testaDatas(p1 :: Ponto, pts :: Ponto[]) : Bool{
testaDatas(p1 :: Ponto, pts :: Ponto[][]) : Bool, Ponto[][]{
	a = 2;
	b = 3;
	print a + b;
	--return b;
	--return p1;
	--return p1, 'c';
	--return p1;
	return true, pts;
}

main(){
    k = 5;
	print fat(5, 6.0)[0];
	pontos = new Ponto[k];
	malhaPontos = new Ponto[][k];
    x = new Float[k]; -- x = new Float[][k];
	x = 2;
	print fat(2)[c];
	chars = new Char[4];
	chars[0] = 'a';
	chars[1] = 75;
	x[0] = 2;
    i = 0;
	iterate(k){
		--aux = new Float;
		--aux = i + 2 * i * .6255;
		--print aux; print '\n';
		malhaPontos[i] = new Ponto[k];
		pontoAux = new Ponto;
		pontoAux.x = i;
		pontoAux.y = i + 2 * i;
		pontos[i] = pontoAux;
		print fat(2.5, 'k')[0];
       --x[i] = aux;
       i = i + 1;
    }
	print pontos[0].x + 'c';
	print pontos[0].x + 'c';
	print pontos[0].x + fat(2.5, 'k')[0];
	pontos[0].x = 'c';
	
	i = 0;
	iterate(k){
       malhaPontos[i][i] = new Ponto;
	   malhaPontos[i][i].x = 2;
	   malhaPontos[i][i].y = 3;
	   i = i + 1;
    }
	
	
{-
	iterate(k){
       x[i] = new Float[k];
       i = i + 1;
    }
    i = 0;
	print '\n'; print 't'; print '\n';
    iterate(k){
       x[i][i] = 2*i + 1;
	   --x[i][i] = 'a';
	   --x[i][i] = .6255;
       i = i + 1;
    }
    
    z = pontos[3];
	print z; print '\n';
-}
	print pontos; print '\n';
    print x; print '\n';
	
	ponto1 = new Ponto;
	ponto1.x = 2;
	ponto1.y = 9;
	print testaDatas(ponto1, pontos)[0];
}

