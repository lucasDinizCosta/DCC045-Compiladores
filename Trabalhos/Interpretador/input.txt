-- Saída esperada
--{(12,12),(13,11),(14,10),(15,9),(16,8)}
--{(16,8),(15,9),(14,10),(13,11),(12,12)}
---- The marvelous env Debugger ------ 
--p  :  [{x=16, y=8}, {x=15, y=9}, {x=14, y=10}, {x=13, y=11}, {x=12, y=12}]
--i  :  5
--k  :  5


-- Impelementa um algoritmo de ordenacao

data Ponto{
   x :: Int;
   y :: Int;
}

printP(p :: Ponto){
    print '(';
    print p.x;
    print ',';
    print p.y;
    print ')';
}

printV( v :: Ponto[], n :: Int){
   print '{';
   if(0 < n){
       printP( v[0]); 
       i = 1;
       iterate(n-1){
           print ',';
           printP(v[i]);
           i = i + 1;
       }
   }
   print '}';
}

-- Oredena em relação a coordenada x
sort(v :: Ponto[], n :: Int){
    i = 0;
    iterate(n-1){
       j = i + 1;
       iterate(n-(i+1)){
          if(v[i].x < v[j].x){
             aux = v[i];
             v[i] = v[j];
             v[j] = aux;
          }
          j = j + 1;
       }
       i = i +1; 
    }
}

main(){
   k = 5;
   p = new Ponto [k];
   i = 0;
   iterate(k){
      p[i] = new Ponto;
      p[i].x = 12+i;
      p[i].y = 12-i;
      i = i + 1;
   }
   printV(p,k);
   sort(p,k);
   print '\n';
   printV(p,k);
   print '\n';
}

